export enum CommandType {
  // Video commands
  REQUEST_VIDEO_PAUSE = 'REQUEST_VIDEO_PAUSE',
  REQUEST_VIDEO_PLAY = 'REQUEST_VIDEO_PLAY',
  CONFIRM_VIDEO_PAUSED = 'CONFIRM_VIDEO_PAUSED',
  CONFIRM_VIDEO_PLAYING = 'CONFIRM_VIDEO_PLAYING',
  MANUAL_PAUSE = 'MANUAL_PAUSE',
  VIDEO_RESUME = 'VIDEO_RESUME',
  
  // Agent commands
  SHOW_AGENT = 'SHOW_AGENT',
  ACTIVATE_AGENT = 'ACTIVATE_AGENT',
  REJECT_AGENT = 'REJECT_AGENT',
  CLEAR_UNACTIVATED = 'CLEAR_UNACTIVATED',
  QUIZ_ANSWER = 'QUIZ_ANSWER',
  REFLECTION_SUBMIT = 'REFLECTION_SUBMIT',
  REFLECTION_TYPE_CHOSEN = 'REFLECTION_TYPE_CHOSEN',
  REFLECTION_CANCEL = 'REFLECTION_CANCEL',
  
  // Segment commands
  SET_IN_POINT = 'SET_IN_POINT',
  SET_OUT_POINT = 'SET_OUT_POINT',
  CLEAR_SEGMENT = 'CLEAR_SEGMENT',
  SEND_SEGMENT_TO_CHAT = 'SEND_SEGMENT_TO_CHAT',
  
  // Recording commands
  RECORDING_STARTED = 'RECORDING_STARTED',
  RECORDING_PAUSED = 'RECORDING_PAUSED',
  RECORDING_RESUMED = 'RECORDING_RESUMED',
  RECORDING_STOPPED = 'RECORDING_STOPPED',
  
  // System commands
  VERIFY_STATE = 'VERIFY_STATE',
  RECOVER_FROM_ERROR = 'RECOVER_FROM_ERROR'
}

export interface Command {
  id: string
  type: CommandType
  payload: any
  timestamp: number
  attempts: number
  maxAttempts: number
  status: 'pending' | 'processing' | 'complete' | 'failed'
  error?: Error
}